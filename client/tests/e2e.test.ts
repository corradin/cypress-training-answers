import { test, expect } from '@playwright/test';

test.describe('Changing the songs', () => {
  test.describe.configure({ mode: 'serial' });
  test.afterEach(async ({ page }) => {
    // Clean up
    await page.goto('http://localhost:8081/reset');
  });

  test('Adding a song', async ({ page }) => {
    await page.goto('http://localhost:8080/');

    await page.getByRole('link', { name: 'add' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs/create');

    await page.getByLabel('Title').click();

    await page.getByLabel('Title').fill('Sample Title');

    await page.getByLabel('Title').press('Tab');

    await page.getByLabel('Artist').fill('Sample Artist');

    await page.getByLabel('Artist').press('Tab');

    await page.getByLabel('Genre').fill('Sample Genre');

    await page.getByLabel('Genre').press('Tab');

    await page.getByRole('textbox', { name: 'Album*' }).fill('Sample Album');

    await page.getByRole('textbox', { name: 'Album*' }).press('Tab');

    await page.getByLabel('Album Image Url').fill('localhost:8080');

    await page.getByLabel('Album Image Url').press('Tab');

    await page.getByLabel('YouTube ID').fill('SampleYouTubeID');

    await page.getByLabel('YouTube ID').press('Tab');

    await page.getByLabel('Tab').fill('Sample Tab');

    await page.getByLabel('Tab').press('Tab');

    await page.getByLabel('Lyrics').fill('Sample Lyrics');

    await page.getByRole('button', { name: 'Create Song' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs');

    await page.getByText('Sample Title').click();
  });

  test('Edit an existing song', async ({ page }) => {
    await page.goto('http://localhost:8080/');

    await page.getByRole('link', { name: 'add' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs/create');

    await page.getByLabel('Title').click();

    await page.getByLabel('Title').fill('Sample Title');

    await page.getByLabel('Title').press('Tab');

    await page.getByLabel('Artist').fill('Sample Artist');

    await page.getByLabel('Artist').press('Tab');

    await page.getByLabel('Genre').fill('Sample Genre');

    await page.getByLabel('Genre').press('Tab');

    await page.getByRole('textbox', { name: 'Album*' }).fill('Sample Album');

    await page.getByRole('textbox', { name: 'Album*' }).press('Tab');

    await page.getByLabel('Album Image Url').fill('localhost:8080');

    await page.getByLabel('Album Image Url').press('Tab');

    await page.getByLabel('YouTube ID').fill('SampleYouTubeID');

    await page.getByLabel('YouTube ID').press('Tab');

    await page.getByLabel('Tab').fill('Sample Tab');

    await page.getByLabel('Tab').press('Tab');

    await page.getByLabel('Lyrics').fill('Sample Lyrics');

    await page.getByRole('button', { name: 'Create Song' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs');

    await page.getByText('Sample Title').click();

    await page.goto('http://localhost:8080/');

    // await page.locator('div:nth-child(6) > .layout > div > .cyan').click();
    // This is more readable than the line above that is generated by Playwright and commented out.
    await page.getByText('Sample Title').locator('..').getByRole('link', { name: 'VIEW' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs/6');

    await page.getByRole('link', { name: 'Edit' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs/6/edit');

    await page.getByRole('textbox', { name: 'Title' }).click();

    await page.getByRole('textbox', { name: 'Title' }).fill('Sample Title Edited');

    await page.getByRole('button', { name: 'Save Song' }).click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs/6');

    await page.getByText('TabTracker').click();
    await expect(page).toHaveURL('http://localhost:8080/#/songs');

    await page.getByText('Sample Title Edited').click();
  });
});

test('Search component start state assertions', async ({ page }) => {
  await page.goto('http://localhost:8080/');

  const searchInput = page.getByPlaceholder('Search by song title, artist, album, or genre');

  await expect(searchInput).not.toBeFocused();
  await searchInput.click();
  await expect(searchInput).toBeFocused();
});
